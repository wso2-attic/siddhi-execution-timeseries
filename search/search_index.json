{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"siddhi-execution-timeseries The siddhi-execution-timeseries extension is an extension to Siddhi which enables users to forecast and detect outliers in time series data, using Linear Regression Models. Find some useful links below: Source code Releases Issue tracker Latest API Docs Latest API Docs is 5.0.1 . How to use Using the extension in WSO2 Stream Processor You can use this extension in the latest WSO2 Stream Processor that is a part of WSO2 Analytics offering, with editor, debugger and simulation support. This extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component jar that can be found in the STREAM_PROCESSOR_HOME /lib directory. Using the extension as a java library This extension can be added as a maven dependency along with other Siddhi dependencies to your project. dependency groupId org.wso2.extension.siddhi.execution.timeseries /groupId artifactId siddhi-execution-timeseries /artifactId version x.x.x /version /dependency Jenkins Build Status Branch Build Status master Features forecast ( Stream Processor ) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. kalmanMinMax ( Stream Processor ) The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. kernelMinMax ( Stream Processor ) TBD lengthTimeForecast ( Stream Processor ) This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. lengthTimeOutlier ( Stream Processor ) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. lengthTimeRegress ( Stream Processor ) This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. outlier ( Stream Processor ) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. regress ( Stream Processor ) This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. How to Contribute Please report issues at GitHub Issue Tracker . Send your contributions as pull requests to master branch . Contact us Post your questions with the \"Siddhi\" tag in Stackoverflow . Siddhi developers can be contacted via the mailing lists: Developers List : dev@wso2.org Architecture List : architecture@wso2.org Support We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. For more details and to take advantage of this unique opportunity contact us via http://wso2.com/support/ .","title":"Welcome"},{"location":"#siddhi-execution-timeseries","text":"The siddhi-execution-timeseries extension is an extension to Siddhi which enables users to forecast and detect outliers in time series data, using Linear Regression Models. Find some useful links below: Source code Releases Issue tracker","title":"siddhi-execution-timeseries"},{"location":"#latest-api-docs","text":"Latest API Docs is 5.0.1 .","title":"Latest API Docs"},{"location":"#how-to-use","text":"Using the extension in WSO2 Stream Processor You can use this extension in the latest WSO2 Stream Processor that is a part of WSO2 Analytics offering, with editor, debugger and simulation support. This extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component jar that can be found in the STREAM_PROCESSOR_HOME /lib directory. Using the extension as a java library This extension can be added as a maven dependency along with other Siddhi dependencies to your project. dependency groupId org.wso2.extension.siddhi.execution.timeseries /groupId artifactId siddhi-execution-timeseries /artifactId version x.x.x /version /dependency","title":"How to use"},{"location":"#jenkins-build-status","text":"Branch Build Status master","title":"Jenkins Build Status"},{"location":"#features","text":"forecast ( Stream Processor ) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. kalmanMinMax ( Stream Processor ) The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. kernelMinMax ( Stream Processor ) TBD lengthTimeForecast ( Stream Processor ) This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. lengthTimeOutlier ( Stream Processor ) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. lengthTimeRegress ( Stream Processor ) This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. outlier ( Stream Processor ) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. regress ( Stream Processor ) This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression.","title":"Features"},{"location":"#how-to-contribute","text":"Please report issues at GitHub Issue Tracker . Send your contributions as pull requests to master branch .","title":"How to Contribute"},{"location":"#contact-us","text":"Post your questions with the \"Siddhi\" tag in Stackoverflow . Siddhi developers can be contacted via the mailing lists: Developers List : dev@wso2.org Architecture List : architecture@wso2.org","title":"Contact us"},{"location":"#support","text":"We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. For more details and to take advantage of this unique opportunity contact us via http://wso2.com/support/ .","title":"Support"},{"location":"about/license/","text":"Copyright (c) 2017 WSO2 Inc. ( http://www.wso2.org ) All Rights Reserved. WSO2 Inc. licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ------------------------------------------------------------------------- Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS","title":"License"},{"location":"api/4.0.10/","text":"API Docs - v4.0.10 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.10"},{"location":"api/4.0.10/#api-docs-v4010","text":"","title":"API Docs - v4.0.10"},{"location":"api/4.0.10/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.10/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.10/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.10/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.10/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.10/#lengthtimeoutlier-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.10/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.10/#outlier-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.10/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.11/","text":"API Docs - v4.0.11 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X) Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.11"},{"location":"api/4.0.11/#api-docs-v4011","text":"","title":"API Docs - v4.0.11"},{"location":"api/4.0.11/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.11/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.11/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.11/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.11/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.11/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.11/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.11/#outlier-stream-processor","text":"This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X) Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.11/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.12/","text":"API Docs - v4.0.12 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X) Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.12"},{"location":"api/4.0.12/#api-docs-v4012","text":"","title":"API Docs - v4.0.12"},{"location":"api/4.0.12/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.12/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.12/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.12/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.12/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.12/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.12/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.12/#outlier-stream-processor","text":"This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X) Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.12/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.13/","text":"API Docs - v4.0.13 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.13"},{"location":"api/4.0.13/#api-docs-v4013","text":"","title":"API Docs - v4.0.13"},{"location":"api/4.0.13/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.13/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.13/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.13/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.13/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.13/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.13/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.13/#outlier-stream-processor","text":"This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.13/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.14/","text":"API Docs - v4.0.14 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.14"},{"location":"api/4.0.14/#api-docs-v4014","text":"","title":"API Docs - v4.0.14"},{"location":"api/4.0.14/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.14/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.14/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.14/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.14/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.14/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.14/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.14/#outlier-stream-processor","text":"This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.14/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.15/","text":"API Docs - v4.0.15 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.15"},{"location":"api/4.0.15/#api-docs-v4015","text":"","title":"API Docs - v4.0.15"},{"location":"api/4.0.15/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.15/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.15/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.15/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.15/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.15/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.15/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.15/#outlier-stream-processor","text":"This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.15/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.16/","text":"API Docs - v4.0.16 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.16"},{"location":"api/4.0.16/#api-docs-v4016","text":"","title":"API Docs - v4.0.16"},{"location":"api/4.0.16/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.16/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.16/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.16/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.16/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.16/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.16/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.16/#outlier-stream-processor","text":"This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.16/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.17/","text":"API Docs - v4.0.17 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.17"},{"location":"api/4.0.17/#api-docs-v4017","text":"","title":"API Docs - v4.0.17"},{"location":"api/4.0.17/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.17/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.17/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.17/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.17/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.17/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.17/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.17/#outlier-stream-processor","text":"This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.17/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.18/","text":"API Docs - v4.0.18 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.18"},{"location":"api/4.0.18/#api-docs-v4018","text":"","title":"API Docs - v4.0.18"},{"location":"api/4.0.18/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.18/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.18/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.18/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.18/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.18/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) or lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.18/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.18/#outlier-stream-processor","text":"This allows you to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier True if the event is an outlier, False if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.18/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.19/","text":"API Docs - v4.0.19 Timeseries forecast (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.19"},{"location":"api/4.0.19/#api-docs-v4019","text":"","title":"API Docs - v4.0.19"},{"location":"api/4.0.19/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.19/#forecast-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.19/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.19/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.19/#lengthtimeforecast-stream-processor","text":"This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.19/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.19/#lengthtimeregress-stream-processor","text":"This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.19/#outlier-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.19/#regress-stream-processor","text":"This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.5/","text":"API Docs - v4.0.5 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. outlier (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"4.0.5"},{"location":"api/4.0.5/#api-docs-v405","text":"","title":"API Docs - v4.0.5"},{"location":"api/4.0.5/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.5/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.5/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.5/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.5/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.5/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.5/#outlier-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.5/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.5/#lengthtimeoutlier-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.6/","text":"API Docs - v4.0.6 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.6"},{"location":"api/4.0.6/#api-docs-v406","text":"","title":"API Docs - v4.0.6"},{"location":"api/4.0.6/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.6/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.6/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.6/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.6/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.6/#lengthtimeoutlier-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.6/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.6/#outlier-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.6/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.7/","text":"API Docs - v4.0.7 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.7"},{"location":"api/4.0.7/#api-docs-v407","text":"","title":"API Docs - v4.0.7"},{"location":"api/4.0.7/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.7/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.7/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.7/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.7/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.7/#lengthtimeoutlier-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.7/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.7/#outlier-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.7/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.8/","text":"API Docs - v4.0.8 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.8"},{"location":"api/4.0.8/#api-docs-v408","text":"","title":"API Docs - v4.0.8"},{"location":"api/4.0.8/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.8/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.8/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.8/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.8/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.8/#lengthtimeoutlier-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.8/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.8/#outlier-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.8/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.0.9/","text":"API Docs - v4.0.9 Timeseries forecast (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.0.9"},{"location":"api/4.0.9/#api-docs-v409","text":"","title":"API Docs - v4.0.9"},{"location":"api/4.0.9/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.0.9/#forecast-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y,) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.0.9/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.9/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The time series value to be considered for minima maxima detection. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This can be min, max or minmax. STRING No No Examples EXAMPLE 1 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into outputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from inputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into outputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from inputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into outputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.9/#lengthtimeforecast-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X streams, and compute the forecast Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.0.9/#lengthtimeoutlier-stream-processor","text":"This allows user to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.0.9/#lengthtimeregress-stream-processor","text":"This allows user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.0.9/#outlier-stream-processor","text":"This allows user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression when finding outliers. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that shoukd be used for a regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.0.9/#regress-stream-processor","text":"This allows user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that shoukd be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.1.0/","text":"API Docs - v4.1.0 Timeseries forecast (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.1.0"},{"location":"api/4.1.0/#api-docs-v410","text":"","title":"API Docs - v4.1.0"},{"location":"api/4.1.0/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.1.0/#forecast-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.1.0/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.1.0/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.1.0/#lengthtimeforecast-stream-processor","text":"This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.1.0/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.1.0/#lengthtimeregress-stream-processor","text":"This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.1.0/#outlier-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.1.0/#regress-stream-processor","text":"This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.1.1/","text":"API Docs - v4.1.1 Timeseries forecast (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.1.1"},{"location":"api/4.1.1/#api-docs-v411","text":"","title":"API Docs - v4.1.1"},{"location":"api/4.1.1/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.1.1/#forecast-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.1.1/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.1.1/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.1.1/#lengthtimeforecast-stream-processor","text":"This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.1.1/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.1.1/#lengthtimeregress-stream-processor","text":"This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.1.1/#outlier-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.1.1/#regress-stream-processor","text":"This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/4.1.2/","text":"API Docs - v4.1.2 Timeseries forecast (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"4.1.2"},{"location":"api/4.1.2/#api-docs-v412","text":"","title":"API Docs - v4.1.2"},{"location":"api/4.1.2/#timeseries","text":"","title":"Timeseries"},{"location":"api/4.1.2/#forecast-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/4.1.2/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.1.2/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.1.2/#lengthtimeforecast-stream-processor","text":"This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/4.1.2/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/4.1.2/#lengthtimeregress-stream-processor","text":"This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/4.1.2/#outlier-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/4.1.2/#regress-stream-processor","text":"This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/5.0.0/","text":"API Docs - v5.0.0 Timeseries forecast (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"5.0.0"},{"location":"api/5.0.0/#api-docs-v500","text":"","title":"API Docs - v5.0.0"},{"location":"api/5.0.0/#timeseries","text":"","title":"Timeseries"},{"location":"api/5.0.0/#forecast-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/5.0.0/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/5.0.0/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?min?) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, ?minmax?) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/5.0.0/#lengthtimeforecast-stream-processor","text":"This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/5.0.0/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/5.0.0/#lengthtimeregress-stream-processor","text":"This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/5.0.0/#outlier-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and ? coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 ? coefficients of the regression equation. DOUBLE beta1 ? coefficients of the regression equation. DOUBLE betan ? coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/5.0.0/#regress-stream-processor","text":"This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/5.0.1/","text":"API Docs - v5.0.1 Tested Siddhi Core version: 5.1.1 It could also support other Siddhi Core minor versions. Timeseries forecast (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, \u2018min\u2019) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, \u2018minmax\u2019) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 \u03b2 coefficients of the regression equation. DOUBLE beta1 \u03b2 coefficients of the regression equation. DOUBLE betan \u03b2 coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 \u03b2 coefficients of the regression equation. DOUBLE beta1 \u03b2 coefficients of the regression equation. DOUBLE betan \u03b2 coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"5.0.1"},{"location":"api/5.0.1/#api-docs-v501","text":"Tested Siddhi Core version: 5.1.1 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.1"},{"location":"api/5.0.1/#timeseries","text":"","title":"Timeseries"},{"location":"api/5.0.1/#forecast-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/5.0.1/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/5.0.1/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, \u2018min\u2019) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, \u2018minmax\u2019) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/5.0.1/#lengthtimeforecast-stream-processor","text":"This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/5.0.1/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 \u03b2 coefficients of the regression equation. DOUBLE beta1 \u03b2 coefficients of the regression equation. DOUBLE betan \u03b2 coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/5.0.1/#lengthtimeregress-stream-processor","text":"This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/5.0.1/#outlier-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 \u03b2 coefficients of the regression equation. DOUBLE beta1 \u03b2 coefficients of the regression equation. DOUBLE betan \u03b2 coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/5.0.1/#regress-stream-processor","text":"This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"},{"location":"api/latest/","text":"API Docs - v5.0.1 Tested Siddhi Core version: 5.1.1 It could also support other Siddhi Core minor versions. Timeseries forecast (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. kalmanMinMax (Stream Processor) The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given. kernelMinMax (Stream Processor) TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, \u2018min\u2019) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, \u2018minmax\u2019) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values. lengthTimeForecast (Stream Processor) This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user. lengthTimeOutlier (Stream Processor) This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 \u03b2 coefficients of the regression equation. DOUBLE beta1 \u03b2 coefficients of the regression equation. DOUBLE betan \u03b2 coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. lengthTimeRegress (Stream Processor) This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams. outlier (Stream Processor) This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 \u03b2 coefficients of the regression equation. DOUBLE beta1 \u03b2 coefficients of the regression equation. DOUBLE betan \u03b2 coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not. regress (Stream Processor) This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"latest"},{"location":"api/latest/#api-docs-v501","text":"Tested Siddhi Core version: 5.1.1 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.1"},{"location":"api/latest/#timeseries","text":"","title":"Timeseries"},{"location":"api/latest/#forecast-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the regression calculation when forecasting the Y value. Syntax timeseries:forecast( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE next.x.value, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that could be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:forecast(X+5, Y, X) select * insert into StockForecaster This query submits an expression to be used as the next X value (X+2), a dependent input stream (Y) and an independent input stream (X) that are used to perform a linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"forecast (Stream Processor)"},{"location":"api/latest/#kalmanminmax-stream-processor","text":"The kalmanMinMax function uses the kalman filter to smooth the values of the time series within a given window, and then determine the maxima and minima of that set of values. Syntax timeseries:kalmanMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the maxima and/or minima detection. DOUBLE FLOAT INT LONG No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type The type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, min ) select * insert into OutputStream; This example returns the maximum values for a set of price values given. EXAMPLE 2 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values given. EXAMPLE 3 from InputStream#timeseries:kalmanMinMax(price, 0.000001,0.0001, 25, minmax ) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values given.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/latest/#kernelminmax-stream-processor","text":"TBD Syntax timeseries:kernelMinMax( DOUBLE|FLOAT|INT|LONG variable, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic variable The value of the time series to be considered for the detection of minima and/or maxima. DOUBLE FLOAT INT LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The number of values to be considered for smoothing and determining the extremes. INT No No extrema.type This is the type of extrema considered, i.e., min, max or minmax. STRING No No Examples EXAMPLE 1 from InputStream#timeseries:kernelMinMax(price, 3, 7, \u2018min\u2019) select * insert into OutputStream; This example returns the maximum values for a set of price values. EXAMPLE 2 from InputStream#timeseries:kernelMinMax(price, 3, 7, max ) select * insert into OutputStream; This example returns the minimum values for a set of price values. EXAMPLE 3 from InputStream#timeseries:kernelMinMax(price, 3, 7, \u2018minmax\u2019) select * insert into OutputStream; This example returns both the minimum values and the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/latest/#lengthtimeforecast-stream-processor","text":"This allows the user to restrict the number of events considered for the regression calculation when forecasting the Y value based on a specified time window and/or batch size. Syntax timeseries:lengthTimeForecast( LONG time.window, INT batch.size, DOUBLE next.x.value, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for a regression calculation. INT No No next.x.value The value to be used to forecast the Y value. This can be a constant or an expression (e.g., x+5). DOUBLE No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeForecast(2 sec, 100, 10, Y, X) select * insert into StockForecaster This query submits a time window (2 seconds), a batch size (100 events), a constant to be used as the next X value (10), a dependent input stream (Y) and an independent input stream (X). These inputs are used to perform linear regression between Y and X streams, and compute the forecast of Y value based on the next X value specified by the user.","title":"lengthTimeForecast (Stream Processor)"},{"location":"api/latest/#lengthtimeoutlier-stream-processor","text":"This allows you to restrict the number of events considered for the regression calculation performed when finding outliers based on a specified time window and/or a batch size. This function should be used in one of the following formats. lengthTimeOutlier(time window, batch size, range, Y, X) OR lengthTimeOutlier(time window, batch size, range, calculation interval, confidence interval, Y, X) There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:lengthTimeOutlier( LONG time.window, INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration that should be considered for a regression calculation. LONG No No batch.size The maximum number of events that could be used for the regression calculation. INT No No range The number of standard deviations from the regression calculation. INT LONG No No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier The function returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 \u03b2 coefficients of the regression equation. DOUBLE beta1 \u03b2 coefficients of the regression equation. DOUBLE betan \u03b2 coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeOutlier(2 sec, 100, 2, Y, X) select * insert into StockForecaster; This query submits a time window (2 seconds), a batch size (100 events), the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X), that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"lengthTimeOutlier (Stream Processor)"},{"location":"api/latest/#lengthtimeregress-stream-processor","text":"This allows the user to specify the time window and batch size (required). The number of events considered for the regression calculation can be restricted based on the time window and/or the batch size. Syntax timeseries:lengthTimeRegress( LONG time.window, INT batch.size, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic time.window The maximum time duration to be considered for the regression calculation. LONG No No batch.size The maximum number of events that should be used for the regression calculation. 1000000000 INT Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:lengthTimeRegress(200, 10000, 2, 0.95, Y, X) select * insert into StockForecaster; This query submits a time window (200 milliseconds), a batch size (10,000 events), a calculation interval (every 2 events), a confidence interval (0.95), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and all the X streams.","title":"lengthTimeRegress (Stream Processor)"},{"location":"api/latest/#outlier-stream-processor","text":"This allows the user to specify a batch size (optional) that defines the number of events to be considered for the calculation of regression while finding the outliers. This function should be used in one of the following formats. outlier(range, Y, X) or outlier(calculation interval, batch size, confidence interval, range, Y, X). There can be different outputs and \u03b2 coefficients of the regression equation and can return dynamic attributes as beta1 , beta2 ... betan. Syntax timeseries:outlier( INT batch.size, INT|LONG range, INT calculation.interval, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic batch.size The maximum number of events that could be used for a regression calculation. 100000 INT Yes No range The number of standard deviations from the regression calculation. 0.95 INT LONG Yes No calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream of the independent variable. DOUBLE No No Extra Return Attributes Name Description Possible Types outlier This returns 'True' if the event is an outlier and 'False' if not. BOOL stderr The standard error of the regression equation. DOUBLE beta0 \u03b2 coefficients of the regression equation. DOUBLE beta1 \u03b2 coefficients of the regression equation. DOUBLE betan \u03b2 coefficients of the regression equation. DOUBLE Examples EXAMPLE 1 from StockExchangeStream#timeseries:outlier(2, Y, X) select * insert into StockForecaster; This query submits the number of standard deviations to be used as a range (2), a dependent input stream (Y) and an independent input stream (X) that are used to perform linear regression between Y and X. It returns an output that indicates whether the current event is an outlier or not.","title":"outlier (Stream Processor)"},{"location":"api/latest/#regress-stream-processor","text":"This allows the user to specify the batch size (optional) that defines the number of events to be considered for the calculation of regression. Syntax timeseries:regress( INT calculation.interval, INT batch.size, DOUBLE confidence.interval, DOUBLE y.stream, DOUBLE x.stream) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic calculation.interval The frequency with which the regression calculation should be carried out. 1 INT Yes No batch.size The maximum number of events that should be used for a regression calculation. 1000000000 INT Yes No confidence.interval The confidence interval to be used for a regression calculation. 0.95 DOUBLE Yes No y.stream The data stream of the dependent variable. DOUBLE No No x.stream The data stream(s) of the independent variable. DOUBLE No No Examples EXAMPLE 1 from StockExchangeStream#timeseries:regress(10, 100000, 0.95, Y, X1, X2, X3) select * insert into StockForecaster This query submits a calculation interval (every 10 events), a batch size (100,000 events), a confidence interval (0.95), a dependent input stream (Y) and 3 independent input streams (X1, X2, X3) that are used to perform linear regression between Y and all the X streams.","title":"regress (Stream Processor)"}]}